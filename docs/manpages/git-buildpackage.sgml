<refentry id="gbp.man.git.buildpackage">
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
  </refentryinfo>
  <refmeta>
    <refentrytitle>git-buildpackage</refentrytitle>
    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&git-buildpackage;</refname>
    <refpurpose>Build Debian packages from a Git repository</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      &git-buildpackage;
      <arg><option>--git-ignore-new</option></arg>
      <arg><option>--git-tag</option></arg>
      <arg><option>--git-verbose</option></arg>
      <arg><option>--git-upstream-branch=</option><replaceable>branch_name</replaceable></arg>
      <arg><option>--git-debian-branch=</option><replaceable>branch_name</replaceable></arg>
      <arg><option>--git-builder=</option><replaceable>BUILD_CMD</replaceable></arg>
      <arg><option>--git-cleaner=</option><replaceable>CLEAN_CMD</replaceable></arg>
      <arg><option>--git-sign-tags</option></arg>
      <arg><option>--git-keyid=</option><replaceable>gpg-keyid</replaceable></arg>
      <arg><option>--git-posttag=</option><replaceable>command</replaceable></arg>
      <arg><option>--git-debian-tag=</option><replaceable>tag-format</replaceable></arg>
      <arg><option>--git-no-create-orig</option></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>
    <para>
    &git-buildpackage; is used to build Debian source and .deb packages from a &git; repository.
    </para>
    <para>
        &git-buildpackage; will, in order:
   </para>
    <itemizedlist>
        <listitem><para>Verify that it is being executed from the
            proper location.</para>
        </listitem>
	<listitem><para>Verify that the repository doesn't contain any
	uncommitted source changes.</para>
	</listitem>
        <listitem><para>Verify that it is being executed from the
        correct branch.</para>
        </listitem>
        <listitem><para>Build an orig.tar.gz if it doesn't exist.</para>
        </listitem>
        <listitem><para>Call <application>debuild</application>(1)
            (or the application specified via <option>--git-builder</option>)
            with arguments instructing it to ignore &git; meta-data in
            the diff.gz, passing along all arguments given to
            &git-buildpackage; that don't start with --git-.
          </para>
        </listitem>
    </itemizedlist>
  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <variablelist>
      <varlistentry>
        <term><option>--git-ignore-new</option>
        </term>
        <listitem>
	  <para>Build the .diff.gz and debian package although there are
	  uncommitted changes in the source tree.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-tag</option>
        </term>
        <listitem>
          <para>Add a git tag after a successfull build.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-builder=<replaceable>BUILD_CMD</replaceable></option></term>
        <listitem>
          <para>Use <replaceable>BUILD_CMD</replaceable> instead of <command>debuild -i\.git -I.git</command></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-cleaner=<replaceable>CLEAN_CMD</replaceable></option></term>
        <listitem>
          <para>Use <replaceable>CLEAN_CMD</replaceable> instead of <command>debuild clean</command></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-verbose</option>
        </term>
        <listitem>
          <para>verbose execution</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-upstream-branch</option>=<replaceable>branch_name</replaceable>
        </term>
        <listitem>
	  <para>Branch to build the orig.tar.gz from. Default is <replaceable>upstream</replaceable></para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-debian-branch</option>=<replaceable>branch_name</replaceable>
        </term>
        <listitem>
	  <para>If you're not on this branch when invoking &git-buildpackage;
	  it will fail. Default is <replaceable>master</replaceable>. This is
	  done to make sure you don't accidentally release from a topic branch.
	  Not being on this branch will be ignored when using
	  <option>--git-ignore-new</option>.
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-sign-tags</option>
        </term>
        <listitem>
	  <para>GPG sign all created tags</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-keyid=</option><replaceable>gpg-keyid</replaceable>
        </term>
        <listitem>
	  <para>use this keyid for gpg signing tags</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-posttag=</option><replaceable>command</replaceable>
        </term>
        <listitem>
	  <para>excecute <replaceable>command</replaceable> after tagging a new version</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-debian-tag=</option><replaceable>tag-format</replaceable>
        </term>
        <listitem>
          <para>use this tag format when tagging Debian versions</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>--git-no-create-orig</option>
        </term>
        <listitem>
	  <para>Don't try to create any orig.tar.gz</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1>
      &man.git.config-files;
      <para>All options in the config files are specified without the 'git-' prefix.</para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>git-import-dsc (1), git-import-orig (1), debuild (1), git (1), git-dch (1)</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>&dhusername; &dhemail;</para>

  </refsect1>
</refentry>

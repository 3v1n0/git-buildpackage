#!/usr/bin/make -f
  
DEB_PYTHON2_MODULE_PACKAGES = git-buildpackage
DEB_PYTHON_CLEAN_ARGS = --all

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/python-distutils.mk

COMMANDS = git-buildpackage  \
           git-import-dsc    \
           git-import-dscs   \
           git-import-orig   \
           git-dch           \
           gbp-pull          \
           gbp-clone         \
           gbp-pq            \
           gbp-create-remote-repo

EXAMPLE_SCRIPTS=\
    gbp-add-patch          \
    gbp-cowbuilder-sid     \
    gbp-posttag-push       \
    gbp-configure-unpatched-source \
    wrap_cl.py

DEB_COMPRESS_EXCLUDE=$(EXAMPLE_SCRIPTS)

SGML_MANPAGES=$(patsubst %,docs/%.1,$(COMMANDS))
POD_MANPAGES=docs/git-pbuilder.1
MANPAGES=$(SGML_MANPAGES) $(POD_MANPAGES)
MANUAL=docs/manual-html
PYCHECKER_ARGS=-boptparse --no-override --no-shadowbuiltin
GBP_VERSION=gbp/gbp_version.py
VERSION_ENT=docs/version.ent

docs/%.1: docs/man.%.sgml
	docbook2man -o docs/ $<

docs/manual.sgml: docs/version.ent

$(MANUAL): docs/manual.sgml docs/chapters/*.sgml docs/manpages/*.sgml
	docbook-2-html -s local $<
	cp /usr/share/gtk-doc/data/*.png $(MANUAL)


docs/git-pbuilder.1: bin/git-pbuilder
	pod2man $< $@

apidocs:
	epydoc -v -n git-buildpackage --no-sourcecode -o docs/apidocs/ \
	    --url=https://honk.sigxcpu.org/piki/projects/git-buildpackage/ \
	    --fail-on-docstring-warning gbp/ tests/test_Git*.py

ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
pychecker:
	PYTHONPATH=. pychecker $(PYCHECKER_ARGS) -q gbp

checks: pychecker
	export GIT_AUTHOR_NAME="Gbp Tests";		\
	export GIT_AUTHOR_EMAIL=tests@example.com;	\
	export GIT_COMMITTER_NAME=$$GIT_AUTHOR_NAME;	\
	export GIT_COMMITTER_EMAIL=$$GIT_AUTHOR_EMAIL;	\
	export PYTHONPATH=$$(pwd);                      \
	nosetests --exe --with-doctest --with-coverage --cover-package=gbp
endif

$(GBP_VERSION): debian/changelog
	echo 'gbp_version="$(DEB_VERSION)"' > $(GBP_VERSION)

$(VERSION_ENT): debian/changelog
	echo '<!ENTITY gbp-version "$(DEB_VERSION)">' >  $(VERSION_ENT)

build/git-buildpackage:: $(MANPAGES) $(MANUAL) $(GBP_VERSION) checks apidocs

binary-post-install/git-buildpackage::
	dh_bash-completion

clean::
	-rm git_*.py gbp_*.py gbp/gbp_version.py links_stamp
	-rm docs/*.1 docs/manpage.* $(VERSION_ENT) git-pbuilder.1
	-rm -r docs/manual-html/ docs/apidocs/

.PHONY: checks
